// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyCase.Data.Context;

namespace MyCase.Data.Migrations
{
    [DbContext(typeof(TvShowsContext))]
    [Migration("20220313141755_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("MyCase.Core.Models.Episode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("SeasonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SeasonId");

                    b.ToTable("Episodes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3e4576c7-09df-4646-9c96-cdb210bb0741"),
                            Name = "Kalbimizi Kıracaklar",
                            SeasonId = new Guid("88f9b49e-f21e-42af-93ed-0e4746b6eb3f"),
                            Summary = "Yakın arkadaşlar Dicle,Güneş vs. için yenibir gün.. "
                        },
                        new
                        {
                            Id = new Guid("6c91df7f-363a-46ac-9364-543a2e00e743"),
                            Name = "Tehlikeli Sular",
                            SeasonId = new Guid("1b750d2a-9594-4a34-be51-c1a5ced11d56"),
                            Summary = "Güneşin işteki ilk günü.. "
                        });
                });

            modelBuilder.Entity("MyCase.Core.Models.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Medium")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Original")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4c1f66c7-69b0-439b-b34d-8ebfddf5942c"),
                            Medium = "http://static.tvmaze.com/uploads/images/medium_portrait/0/1.jpg",
                            Original = "http://static.tvmaze.com/uploads/images/original_untouched/0/1.jpg"
                        });
                });

            modelBuilder.Entity("MyCase.Core.Models.Season", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TvShowId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TvShowId");

                    b.ToTable("Seasons");

                    b.HasData(
                        new
                        {
                            Id = new Guid("88f9b49e-f21e-42af-93ed-0e4746b6eb3f"),
                            Name = "Sezon 1",
                            Summary = "Hayallerinin peşinde koşarken hayata yakalananların hikayesini anlatan...",
                            TvShowId = new Guid("1282d141-674d-43b4-89cf-e87c814f0021")
                        },
                        new
                        {
                            Id = new Guid("1b750d2a-9594-4a34-be51-c1a5ced11d56"),
                            Name = "Sezon 2",
                            Summary = "Hayallerinin peşinde koşarken hayata yakalananların hikayesini anlatan v2...",
                            TvShowId = new Guid("1282d141-674d-43b4-89cf-e87c814f0021")
                        });
                });

            modelBuilder.Entity("MyCase.Core.Models.TvShow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.ToTable("TvShows");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1282d141-674d-43b4-89cf-e87c814f0021"),
                            ImageId = new Guid("4c1f66c7-69b0-439b-b34d-8ebfddf5942c"),
                            Name = "Hayaller ve Hayatlar"
                        });
                });

            modelBuilder.Entity("MyCase.Core.Models.Episode", b =>
                {
                    b.HasOne("MyCase.Core.Models.Season", "Season")
                        .WithMany("Episodes")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Season");
                });

            modelBuilder.Entity("MyCase.Core.Models.Season", b =>
                {
                    b.HasOne("MyCase.Core.Models.TvShow", "TvShow")
                        .WithMany("Seasons")
                        .HasForeignKey("TvShowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TvShow");
                });

            modelBuilder.Entity("MyCase.Core.Models.TvShow", b =>
                {
                    b.HasOne("MyCase.Core.Models.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Image");
                });

            modelBuilder.Entity("MyCase.Core.Models.Season", b =>
                {
                    b.Navigation("Episodes");
                });

            modelBuilder.Entity("MyCase.Core.Models.TvShow", b =>
                {
                    b.Navigation("Seasons");
                });
#pragma warning restore 612, 618
        }
    }
}
